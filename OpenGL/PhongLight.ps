#version 400

in VS_OUT{
    vec2 TEXCOORD;
    vec3 N;
    vec3 L;
    vec3 V;
} fs_in;

uniform sampler2D shaderTexture;

uniform float shininess = 64.0;
uniform float rimPower = 1.0;
uniform vec3 diffuseAlbedo;
uniform vec3 specularAlbedo;
uniform vec3 ambientAlbedo;
out vec4 out_color;

vec3 rimLight(vec3 N, vec3 V){
    vec3 rimColor = vec3(1.0, 1.0, 1.0);

    float f = 1.0 - dot(N, V);

    f = smoothstep(0.0, 1.0, f);

    f = pow(f, rimPower);

    return f * rimColor;
}

void main(){
    vec3 normal = normalize(fs_in.N);
    vec3 lightDir = normalize(fs_in.L);
    vec3 viewDir = normalize(fs_in.V);

    vec3 reflection = reflect(normal, lightDir);

    vec4 textureColor = texture(shaderTexture, fs_in.TEXCOORD);

    vec3 diffuse = max(dot(normal, lightDir), 0.0) * diffuseAlbedo ;
    vec3 specular = pow(max(dot(reflection, viewDir), 0.0), shininess) * specularAlbedo;

    out_color = vec4(diffuse + specular + ambientAlbedo, 1.0) * textureColor;
}