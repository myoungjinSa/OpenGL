#version 400

in vec2 texCoord;
in vec3 normal;

out vec4 outputColor;

uniform sampler2D shaderTexture;
uniform vec3 lightDirection;
uniform vec4 diffuseLightColor;
uniform vec4 ambientLight;

void main(void){
	vec4 textureColor;
	vec4 color;
	vec3 lightDir;
	float lightIntensity;

	//Sample the pixel color from the texture the sampler at this texture coordinate location.
	textureColor = texture(shaderTexture, texCoord);

	color = ambientLight;

	//Invert the light direction for calculations.
	lightDir = -lightDirection;

	//Calculate the amount of light on this pixel.
	lightIntensity = clamp(dot(normal, lightDir), 0.0f, 1.0f);

	//Check if the N dot L is greater than zero. 
	//If it is then add the diffuse color to the ambient color. 
	//If not then you need to be careful to not add the diffuse color. The reason being is that the diffuse color could be negative and it will subtract away some of the ambient color in the addition which is not correct.
	if(lightIntensity > 0.0f){
		//Determine the final diffuse color based on the diffuse color and the amount of light intensity.
		color += (diffuseLightColor * lightIntensity);
	}

	color = clamp(color, 0.0f, 1.0f);
	
	outputColor = color * textureColor;
}