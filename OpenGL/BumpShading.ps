#version 400 core

out vec4 color;

uniform sampler2D tex_color;
uniform sampler2D tex_normal;

in vec2 texcoord;
in vec3 lightDir;
in vec3 eyeDir;

uniform float shininess = 16.0;
uniform vec3 diffuseColor;
uniform vec3 specularColor;
uniform vec3 ambientColor;

void main(void){
    vec3 V = normalize(eyeDir);
    vec3 L = normalize(lightDir);

    vec3 N = normalize(texture(tex_normal, texcoord).rgb * 2.0 - vec3(1.0));

    vec3 R = reflect(-L, N);

    vec3 diffuse_albedo = texture(tex_color, texcoord).rgb;

    vec3 diffuse = max(dot(N, L), 0.0) * diffuse_albedo;

    vec3 specular_albedo = vec3(1.0);

    vec3 specular = max(pow(dot(R, V), shininess), 0.0) * specular_albedo;

    color = vec4(diffuse + specular, 1.0);
}
